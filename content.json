{"meta":{"title":"一抹阳光 - qirenji.info","subtitle":"IT技术分享","description":"天才在于积累，聪明在于勤奋。","author":"Qi Renji","url":"http://www.qirenji.info"},"pages":[{"title":"关于我","date":"2017-07-18T09:00:30.000Z","updated":"2017-07-18T09:00:30.000Z","comments":false,"path":"about/index.html","permalink":"http://www.qirenji.info/about/index.html","excerpt":"","text":"Quick Start我是测试文字 Create a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment"},{"title":"网络资料收集","date":"2017-07-20T01:27:59.000Z","updated":"2017-07-20T01:27:59.000Z","comments":false,"path":"collection/index.html","permalink":"http://www.qirenji.info/collection/index.html","excerpt":"","text":"Nginx能用来做什么"},{"title":"","date":"2017-07-18T08:47:31.000Z","updated":"2017-07-18T08:47:31.000Z","comments":false,"path":"categories/index.html","permalink":"http://www.qirenji.info/categories/index.html","excerpt":"","text":""},{"title":"","date":"2017-07-18T06:39:44.000Z","updated":"2017-07-18T06:39:44.000Z","comments":false,"path":"tags/index.html","permalink":"http://www.qirenji.info/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"vue全家桶总结","slug":"vue全家桶总结","date":"2017-07-20T14:09:27.000Z","updated":"2017-07-20T14:11:55.000Z","comments":true,"path":"2017/07/20/vue全家桶总结/","link":"","permalink":"http://www.qirenji.info/2017/07/20/vue全家桶总结/","excerpt":"","text":"vue全家桶学习一. vue-cli(手脚架搭建项目)初始化项目1vue init webpack projectName 然后顺序执行如下命令，可启动vue项目 123cd my-projectnpm installnpm run dev 如项目中使用其他库或组件需 1npm install *** --save-dev 例如使用scss编写软件,需安装sass编译工具 1npm install sass sass-loader node-sass --save-dev 二.vue-routervue-router主要作为程序的路由控制器 使用： main.js中添加router 1234567import router from ‘./router’new Vue(&#123; el: '#app', router, template: '&lt;App/&gt;', components: &#123; App &#125;&#125;) ./router/index.js文件中 12345678910111213141516import Router from ‘vue-router’Vue.use(Router);export default new Router(&#123; routes: [ &#123; path: ‘/user/:name’, name: ‘user’, component: User &#125; &#123; path: ‘/’, redirect: ‘/goods’(映射两个地址的关系) &#125; ]&#125;) 路由的使用(相当于是a链接)，绑定to来传递数据 12&lt;router-link :to=“&#123;name:’user’, params: &#123;name:...&#125;&#125;”&gt;&lt;/router-link&gt; 在要切换路由的位置使用router-view进行配合的 1&lt;router-view&gt;&lt;/router-view&gt; 其他 12//返回上一页面this.$router.go(-1) 12//等同于&lt;router-link&gt;this.$router.push(&#123;name:'article',params: &#123; &#125;&#125;) 三. vue-resourcevue-resource添加vue-resource组件 123import VueResource from ‘vue-resource’Vue.use(VueResource); 使用： 12this.$http.get(‘/goods’) .then(...) axiosvue-ressource的下一代产品 1234import VueAxios from ‘vue-axios’import axios from ‘axios’Vue.use(VueAxios,axios) 使用： 1234this.axios.get(‘https://...’) .then(result =&gt; &#123; ... &#125;)this.axios.post(‘https://’,&#123;accesstoken: this.ak&#125;) .then(result =&gt; &#123; ... &#125;) 四. vuex组件之间多通信时使用 123456789101112131415161718import Vuex from ‘vuex’vue.use(Vuex);const store = new Vuex.Store(&#123; state: &#123; tab: ‘all’ &#125;, mutations: &#123; changeTab(state,payload) &#123; state.tab = … &#125; &#125;&#125;)new Vue(&#123; el: '#app', store, template: '&lt;App/&gt;', components: &#123; App &#125;&#125;) 在组件中使用 12this.$store.state.tab;this.$store.commit.(‘changeTab’,&#123; 传参 &#125;) 五. vue的属性12345678910props: &#123;&#125;computed: &#123;&#125;methods: &#123;&#125;components: &#123;&#125;filters: &#123;&#125;watch: &#123; ‘seller’() &#123;&#125;&#125;data() &#123;&#125;created() &#123;&#125;mounted() &#123;&#125; 注意这里只有data和生命周期的钩子函数使用函数形式。 六、父子组件传递数据 父to子父组件中： 1v-bind:属性名=“ ”（简写为 :food=“food”） 子组件： 1props获取 子to父 子组件：1$emit('add',event.target) 父组件： 1v-on(简写为@add=“addFood”) 七、其他DOM更新完成之后执行 1this.$nextTick(() =&gt; &#123; &#125;);","categories":[{"name":"Vue","slug":"Vue","permalink":"http://www.qirenji.info/categories/Vue/"},{"name":"JavaScript","slug":"Vue/JavaScript","permalink":"http://www.qirenji.info/categories/Vue/JavaScript/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://www.qirenji.info/tags/Vue/"}]},{"title":"Vue项目部署阿里云","slug":"Vue项目部署阿里云","date":"2017-07-19T14:06:29.000Z","updated":"2017-07-20T14:12:10.000Z","comments":true,"path":"2017/07/19/Vue项目部署阿里云/","link":"","permalink":"http://www.qirenji.info/2017/07/19/Vue项目部署阿里云/","excerpt":"","text":"Vue项目部署到阿里云服务器文章适合初学vue项目想部署到服务上的。 一、文件准备首先准备好要发布的前后台文件 前端文件如是使用vue-cli搭建，在vue项目中使用如下命令生成 1npm run build 可以看到在本地多出来一个dist文件，此文件为压缩后文件，可直接部署到服务器 后端文件可以简单编写一个，或由后端同学提供这里给出一个nodejs的小例子： 12345678910111213141516171819var express = require('express');var fs = require('fs')var port = process.env.PORT || 3000;var app = express();app.use(express.static('./dist'));app.get(\"/\",function(req,res)&#123; res.render('index.html',&#123;&#125;)&#125;)module.exports = app.listen(port, function (err) &#123; if (err) &#123; console.log(err); return &#125; console.log('Listening at http://localhost:' + port + '\\n')&#125;); 这里后端端口号使用3000端口。 二. 关联文件 把前后端文件放入一个文件夹中，添加至github或码云等仓库 在git上添加服务器和本地的ssh。 服务器和本地都需安装pm2 1npm install pm2 -g 这样就可以通过github把本地和服务器关联起来。 在服务器端的/www文件夹下，创建项目文件夹，并修改其权限，简单简单修改为 123cd /wwwsudo chmod 777 cnode 三. 修改阿里云安全组登陆到阿里云服务器管理页面，找到安全组，添加项目中所需要的安全组的端口号。 四. 修改服务器防火墙12//修改防火墙 sudo vi /etc/iptables.up.rules 12//重启防火墙sudo iptables-restore &lt; /etc/iptables.up.rules 五. 编写ecosystem文件本地编写ecosystem.json文件。如下 1234567891011121314151617181920212223242526272829&#123; \"apps\": [ &#123; \"name\": \"cnode\", \"script\": \"server.js\", \"env\": &#123; \"COMMON_VARIABLE\": \"true\" &#125;, \"env_production\": &#123; \"NODE_ENV\": \"production\" &#125; &#125; ], \"deploy\": &#123; \"production\": &#123; \"user\": \"服务器用户名\", \"host\": [\"你的服务器ip\"], \"port\": \"服务器端口号\", \"ref\": \"origin/master\", \"repo\": \"gtihub或码云的对应项目ssh地址\", \"path\": \"/www/cnode/production\", \"ssh_options\": \"StrictHostKeyChecking=no\", \"post-deploy\": \"npm install --registry=https://registry.npm.taobao.org &amp;&amp; pm2 startOrRestart ecosystem.json --env production\", \"env\": &#123; \"NODE_ENV\": \"production\" &#125; &#125; &#125;&#125; 然后本地执行 1pm2 deploy ecosystem.json production resetup 看到Success说明部署成功。 以后每次服务器更新只需提交到github执行上述代码即可","categories":[{"name":"建站","slug":"建站","permalink":"http://www.qirenji.info/categories/建站/"}],"tags":[{"name":"Vue","slug":"Vue","permalink":"http://www.qirenji.info/tags/Vue/"},{"name":"项目部署","slug":"项目部署","permalink":"http://www.qirenji.info/tags/项目部署/"}]},{"title":"hexo搭建github个人博客","slug":"hexo搭建github个人博客","date":"2017-07-18T15:41:11.000Z","updated":"2017-07-19T14:33:19.000Z","comments":true,"path":"2017/07/18/hexo搭建github个人博客/","link":"","permalink":"http://www.qirenji.info/2017/07/18/hexo搭建github个人博客/","excerpt":"","text":"用Hexo 3 搭建github blog本文使用的是Mac进行演示，如过是windows系统方式基本相同，单具体安装步骤请自行百度。 一. 注册github账号点击gitbub官方网站进行注册 创建仓库注册完成后点击github首页上的➕New repository创建仓库 image 创建的Repository name有固定的格式1你的github昵称.github.io 点击Creat repository即可创建仓库 生成添加秘钥打开终端输入： 1ssh-keygen -t rsa -C \"Github的注册邮箱地址\" 一路Enter过来就好，待秘钥生成完毕，会得到两个文件id_rsa和id_rsa.pub 1cat ~/.ssh/id_rsa.pub 查看公钥并复制其内容。 http://github.com/settings/ssh New SSH key输入一个Title把刚才查看到的公钥输入到Key上，生成SSH key。 二.node.js 和git安装进入node.js官网，下载并安装即可，推荐安装新版。 git安装可用过homebrew安装，首先安装homebrew 1ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 然后安装git 1brew install git 三.安装hexo强调一下，这一步使我们搭建博客的核心，是重中之重。 安装hexo1$ npm install -g hexo-cli 安装好之后，终端输入 1$ hexo 若出现下图，说明hexo安装成功 image 初始化博客着到你创建博客的目录，创建博客文件夹 123456// 创建博客文件夹，并初始化博客$ hexo init &lt;folder&gt;//进入博客文件夹$ cd &lt;folder&gt;//安装所有的依赖包$ npm install 四.修改博客主题和配置 先下载主题到themes文件夹中 修改_config.yml文件中themes项为自己的主题名 修改_config.yml文件中的deploy项如下 1234deploy: type: git repo: https://github.com/你的昵称/你的昵称.github.io.git branch: master 五.新建文章并发布在博客根文件夹下 1$ hexo n \"文章名称\" 可以看到在source/_post/文件夹看到新建的.md文件可以在其结尾处添加一些内容，方便我们测试。输入1$ hexo g 生成我们要发布的文件，在发布之前我们可以通过 1$ hexo s 然后打开浏览器输入localhost:4000,查看文章。现在只是在本地跑起来来，还需要把程序托管到github上。 首先来到 https://github.com/你的昵称/你的昵称.github.io/settings 进行github pages页进行设置，选择source为master分支，点击save即可 image 1234//安装hexo git插件$ npm install hexo-deployer-git --save//部署到github$ hexo g 这样就可通过 你的昵称.github.io 来访问我们的博客了 六.关联域名首先去万网，godaddy等域名系统来购买一个域名。这里我买的是godaddy的域名。购买完成后进入到 管理DNS 关联github 然后再去github pages页设置Custom domain选项为你买的域名。关联成功后等待几分钟，就可以通过域名访问你的hexo博客来。 七.其他123456hexo常用命令hexo n \"我的博客\"==hexo new \"我的博客\"#新建文章hexo p==hexo publishhexo g==hexo generate#生成hexo s==hexo server#启动服务预览hexo d==hexo deploy#部署","categories":[{"name":"建站","slug":"建站","permalink":"http://www.qirenji.info/categories/建站/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://www.qirenji.info/tags/hexo/"},{"name":"个人博客","slug":"个人博客","permalink":"http://www.qirenji.info/tags/个人博客/"}]}]}